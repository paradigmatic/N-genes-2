<project name="ngenes2" default="build" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
    Builds ngenes2 project.
  </description>

  <!-- general project properties -->
  <property name="lib.dir" location="lib" />
  <property name="src.dir" location="src"/>
  <property name="test.dir" location="test" />
  <property name="base.build.dir" location="build" />
  <property name="build.dir" location="${base.build.dir}/classes"/>
  <property name="test.build.dir" location="${base.build.dir}/test"/>
  <property name="instrumented.dir" location="${base.build.dir}/instrumented" />
  <property name="dist.dir" location="dist"/>
  <property name="doc.dir" location="doc" />
  <property name="reports.dir" location="reports" />
  <property name="junit.rep.dir" location="${reports.dir}/junit" />
  <property name="cobertura.rep.dir" location="${reports.dir}/cobertura" />
 
  <!-- ivy properties -->
  <property name="ivy.install.version" value="2.1.0" />
  <property name="ivy.jar.dir" value="ivy" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <path id="classpath">
    <pathelement path="${build.dir}" />
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
      <exclude name="*-sources.jar" />
    </fileset>
  </path>

  <path id="cobertura.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
      <exclude name="*-sources.jar" />
    </fileset>
  </path>

  <path id="test.classpath">
    <pathelement path="${build.dir}" />
    <pathelement path="${build.test}" />
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
      <exclude name="*-sources.jar" />
    </fileset>
  </path>


  <target name="download-ivy" unless="skip.download">
    <mkdir dir="${ivy.jar.dir}"/>
    <!-- download Ivy from web site so that it can be used even
    without any special installation --> <echo message="installing
    ivy..."/>
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
    dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="install-ivy" depends="download-ivy" description="install ivy">
    <!-- try to load ivy here from local ivy dir, in case the user has
    	 not already dropped it into ant's lib dir (note that the
    	 latter copy will always take precedence).  We will not fail
    	 as long as local lib dir exists (it may be empty) and ivy is
    	 in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
    	     uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>  

  <target name="install-dependencies" depends="install-ivy" description="retrieve dependencies with ivy">
    <mkdir dir="${lib.dir}" />
    <ivy:retrieve />
  </target>
  
  <target name="compile" description="compile project">
    <mkdir dir="${build.dir}" />
    <javac
        srcdir="${src.dir}"
        destdir="${build.dir}"
        classpathref="classpath"
       debug="true" />
  </target>

  <target name="compile-tests" description="compile tests" depends="compile">
    <mkdir dir="${test.build.dir}" />
    <javac
        srcdir="${test.dir}"
        destdir="${test.build.dir}"
        classpathref="classpath"
       debug="true" />
  </target>

  <target name="jar" depends="compile" description="create jar">
    <mkdir dir="${dist.dir}" />
    <jar
        destfile="${dist.dir}/${ant.project.name}.jar">
        <fileset dir="${build.dir}"/>
    </jar>
  </target>

  <target name="doc" description="generate the documentation">
    <javadoc
       destdir="${doc.dir}"
       author="false"
       version="false"
       use="false"
       windowtitle="N-genes 2"
       classpathref="classpath">
      <fileset dir="src" />
    </javadoc>
  </target>

  <target name="clean" description="Cleans project generated files">
    <delete dir="${dist.dir}" />
    <delete dir="${base.build.dir}" />
    <delete dir="${doc.dir}" />
    <delete dir="${reports.dir}" />
    <delete dir="${instrumented.dir}" />
    <delete file="cobertura.ser" />
  </target>

  <target name="clean-dependencies" description="Cleans the
  dependencies downloaded by ivy">
    <delete dir="${lib.dir}" />
  </target>

  <target name="mrproper" description="Resets the project by cleaning
  everything" depends="clean,clean-dependencies" />
  
  <target name="setup" description="Setup the project"
  depends="install-dependencies" />

  <target name="junit" description="Test the project"
	  depends="compile-tests,coverage">
    <mkdir dir="${junit.rep.dir}" />
    <junit printsummary="yes" fork="yes" forkmode="once" >
      <formatter type="xml"/>
      <sysproperty key="net.sourceforge.cobertura.datafile"
		   file="cobertura.ser" />
      <classpath location="${instrumented.dir}"/>
      <classpath refid="test.classpath" />
      <batchtest todir="${junit.rep.dir}">
	<fileset dir="${test.dir}">
	  <include name="**/*Test*.java"/>
	</fileset>
      </batchtest>
    </junit>
  </target>

  <target name="junit-report" description="Test the project"
	  depends="junit">
    <junitreport todir="${junit.rep.dir}">
      <fileset dir="${junit.rep.dir}">
	<include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${junit.rep.dir}"/>
    </junitreport>
  </target>


  <target name="coverage" description="Sets up cobertura coverage analysis"
	  depends="compile">
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
    <delete file="cobertura.ser" />
    <mkdir dir="${instrumented.dir}" />
    <cobertura-instrument todir="${instrumented.dir}">
      <excludeClasses regex=".*\.Test.*" />
      <fileset dir="${base.build.dir}">
        <include name="**/*.class"/>
      </fileset>
    </cobertura-instrument>
  </target>


  <target name="coverage-report" depends="junit">
    <cobertura-report srcdir="${src.dir}" destdir="${cobertura.rep.dir}"/>
  </target>

  <target name="test" depends="coverage-report,junit-report" description="Test the project" />


  <target name="build" description="Sets the project up and build
  everything" depends="setup,jar,doc" />

</project>
